jmvtools::install()
jmvtools::install()
list_pages(topic = "meanDifDA")
list_pages<-function(nickname=NULL,topic=NULL,category=NULL) {
pages<-get_pages(nickname,topic,category)
ul<-'<ul>\n'
a<-""
for (p in pages) {
link<-paste0(p$filename,".html")
b<-paste0('<li><a href="',link,'">',p$title,'</a></li>\n')
a<-paste(a,b)
}
a<-paste(ul,a,'</ul>\n')
return(a)
}
list_pages(topic = "meanDifDA")
get_pages<-function(nickname=NULL,topic=NULL,category=NULL) {
criteria=c()
if (!is.null(topic))
criteria["topic"]<-topic
if (!is.null(category))
criteria["category"]<-category
if (!is.null(nickname))
criteria["nickname"]<-nickname
files<-get_files()
sfiles<-searchable(files)
res<-lookup(sfiles,criteria)
res
}
link_pages<-function(nickname=NULL,topic=NULL,category=NULL) {
pages<-get_pages(nickname,topic,category)
a<-""
for (p in pages) {
link<-paste0(p$filename,".html")
a<-paste(a,paste0('<a href="',link,'">',p$title,'</a>'))
}
return(a)
}
list_pages(topic = "meanDifDA")
get_files<-function() {
lf<-list.files(pattern = ".Rmd",full.names = F)
files<-list()
for (f in lf) {
name<-gsub(".Rmd","",f)
record<-yaml_front_matter(f)
record$filename<-name
files[[name]]<-record
}
files
}
list_pages(topic = "meanDifDA")
library(Rsearchable)
list_pages(topic = "meanDifDA")
list_pages(topic = "designAnalysis")
list_pages(topic = "designAnalysis")
get_files
get_files()
setwd("~/Desktop/psychoPDA_docs")
get_files()
setwd("~/Desktop/psychoPDA_docs/docssource")
get_files()
keywords<-function(key) {
span<-'<span class="keywords"> <span class="keytitle"> keywords </span>'
paste(span,key,"</span>")
}
version<-function(ver) {
paste('<span class="version"> <span class="versiontitle"> PsychoPDA version â‰¥ </span> ',ver,' </span>')
}
draft<-'<span class="draft"> Draft version, mistakes may be around </span>'
incomplete<-'<span class="incomplete"> Work in progress: incomplete version </span>'
pic<-function(name) paste('<img src="',name,'" class="img-responsive" alt="">')
issues<-function() {
a<-'<h1>Comments?</h1>\n'
a<-paste(a,'<p>Got comments, issues or spotted a bug? Please open an issue on
<a href=" https://github.com/lucasjfriesen/jamoviPsychoPDA/issues ">
PsychoPDA at github </a> or <a href="mailto:lucasjfriesen@gmail.com">send me an email</a></p>
')
return(a)
}
test<-function() return("xx xxxxxx x")
source("../R/constants.R")
write_commits<-function() {
wd<-getwd()
setwd(TARGETD)
a<-system("git log --pretty=format:'%cd %s' --date=short",intern = T)
test<-grep("initialize",a,fixed=T)
if (length(test)==0)
return(FALSE)
coms<-a[1:(grep("initialize",a,fixed=T)-1)]
coms<-rev(unique(coms))
sel<-list()
j<-1
version="none"
versions<-character()
for (i in seq_along(coms)) {
test<-grep("!",coms[[i]],fixed=T)
if (length(test)>0) next()
test<-grep("Merge",coms[[i]],fixed=T)
if (length(test)>0) next()
test<-grep("#",coms[[i]],fixed=T)
if (length(test)>0) {
version<-strsplit(coms[[i]],"#",fixed = T)[[1]][2]
versions<-c(versions,version)
next()
}
sel[[j]]<-c(coms[[i]],version)
j<-j+1
}
sel<-rev(sel)
versions<-rev(versions)
coms<-do.call("rbind",sel)
for (i in seq_along(versions)) {
rel<-""
if (i==1) rel<-"(future)"
if (i==2) rel<-"(current)"
cat(paste("#",versions[i],rel,"\n\n"))
cs<-coms[coms[,2]==versions[i],1]
for (j in cs)
cat(paste("*",j,"\n\n"))
}
setwd(wd)
#coms
}
get_files()
?yaml_front_matter
library(rmarkdown)
get_files()
x <- get_files()
View(x)
list_pages(topic = "designAnalysis")
list_pages(topic = "designAnalysis")
list_pages(nickname = "meanDiffDA")
list_pages(nickname = "meanDifDA")
setwd("~/Desktop/Jamovi/psychoPDA/jamoviPPDA")
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(difR)
Logistik
difLogistic
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
c("Null", "Moderate", "Large")
x <-c("Null", "Moderate", "Large")
rep(x, 3)
x
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
x
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
GC <-
data.frame(
"label" = rep(as.character(), times = length(designList) * length(hypTrueEff)),
"item" = rep(as.character(), times = length(designList) * length(hypTrueEff)),
"obsMain" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"obsInt" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"hypTrueEff" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"typeM" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"typeS" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"power" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
stringsAsFactors = FALSE
)
jmvtools::install()
jmvtools::install()
jmvtools::install()
GC <-
data.frame(
"label" = rep(as.character(), times = length(designList) * length(hypTrueEff)),
"item" = rep(as.character(), times = length(designList) * length(hypTrueEff)),
"obsMain" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"obsInt" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"hypTrueEff" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"typeM" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"typeS" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
"power" = rep(as.numeric(), times = length(designList) *
length(hypTrueEff)),
stringsAsFactors = FALSE
)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
# ... populate the table from the state
self$results$DESCtable$setState(DESCstate)
# ... populate the table from the state
self$results$DESCtable$setState(DESCstate)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
30:1
resDescTable <- data.frame("bob")
resDescTable
?data.frame
resDescTable <- data.frame(bob = NULL)
resDescTable
resDescTable <- data.frame(bob = "NULL")
resDescTable
resDescTable <- data.frame(bob = NA)
resDescTable
resDescTable[1, bob] =
paste0(
"Detection of",
mess1,
"Differential Item Functioning using the "
),
switch(
class(model),
Logistic = "Logistic regression method ",
genLogistic = "Generalized logistic regression method "
),
pur,
"item purification and with ",
# length(model$groupOne),
#  " reference group(s) and ",
df,
" degree(s) of freedom."
resDescTable[1, bob] =
paste0(
"Detection of",
mess1,
"Differential Item Functioning using the "
)
resDescTable[1, bob] =
paste0(
"Detection of")
resDescTable[1, "bob"] =
paste0(
"Detection of")
resDescTable
nrow(resDescTable)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(readr)
x <- read_csv("~/Desktop/binaryDataSparse.csv")
View(x))
rowSums(x)
rowSums(is.na(x))
rowSums(is.na(x)) == ncol(x)
x <- x[rowSums(is.na(x)) != ncol(x),]
rowSums(is.na(x)) == ncol(x)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
